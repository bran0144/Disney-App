<html>

{# Our app.py code borrowed significantly from the flask starter app code
https://github.com/osu-cs340-ecampus/flask-starter-app
We used the skeleton code for connecting to the db and used the same style for routing and templates.
We updated the code to match our columns and added routes for out M:N relationships
between Touring Plans and Restaurants and Touring Plans and Rides. We followed a similar pattern
for add/delete/update/get operations for each of our tables the routing and templating. 

We also used the course materials in the Explorations to add route 
handling capabilities, and to use gunicorn.
Source URL: https://canvas.oregonstate.edu/courses/1967354/pages/exploration-developing-in-flask?module_item_id=24460849

Original work: We added pages for our M:N relationship to display in a separate Plan View. #}

<head>
	<title>Edit Restaurants</title>
    <link href="style.css" rel="stylesheet" type="text/css" />
</head>

<body>
    <div>
        <table border="1" cellpadding="5"> 
            <caption> Editing Restaurant: </caption>
            <!-- Access data tuple passed from app.py -->
            {% if data %}
                <thead>
                    <tr>
                        <!-- Iterate through each key in the first entry to get the column name -->
                        {% for key in data[0].keys() %}

                        <!-- Create a <th> tag with the key inside of it, this will be our header row -->
                        <th scope="col" data-field="{{ key }}" data-filter-control="input">{{ key }}</th>
                        
                        <!-- End of this for loop -->
                        {% endfor %} 
                    </tr>

                <tbody>
                    <!-- Now, iterate through every item in data -->
                    {% for item in data %}
                    <tr>
                        <!-- Then iterate through every key in the current item dictionary -->
                        {% for key in item.keys() %}
                        
                        <!-- Create a <td> element with the value of that key in it -->
                        <td>{{item[key]}}</td> {% endfor %} 
                    </tr> 
                    {% endfor %} 
            {% endif %} 
        </table>

        <div id="edit">
            <!-- form to edit data in restaurants-->
            <form id="edit_restaurants" action="/edit_restaurants/{{data[0].restaurantID}}" method="post">
                <legend><strong>Edit Restaurant</strong></legend>
                <fieldset>
                    <!-- We can preset form inputs to match attributes currently stored for 'id' of person to be updated via value= and accessing our passed data tuple -->
                    <!-- Create hidden form input to store the passed 'id' of the person we are editing so we can access it easily in our 'POST' method in our app.py -->
                    <input type="hidden" value="{{data[0].restaurantID}}" class="form-control" id="restaurantID" name="restaurantID" required>

                    <label for="restaurantName">Restaurant name:</label>
                    <input type="text" value="{{data[0].restaurantName}}" class="form-control" id="restaurantName" name="restaurantName" required>
                    
                    <label for="characterDining">Character Dining:</label>
                  	<select class="form-control" id="characterDining" name="characterDining" placeholder="">
					<option value="1">Yes</option>
					<option value="0">No</option>
				    </select>	
                    
                    <label for="reservationsAccepted">Reservations Accepted:</label>
				    <select class="form-control" id="reservationsAccepted" name="reservationsAccepted" placeholder="">
					<option value="1">Yes</option>
					<option value="0">No</option>
				    </select>	

                    <label for="parkID">Parks:</label>
                    <select class="form-control" id="parkID" name="parkID" placeholder="" value="" required><br>
                        {% for item in parks %}
                        <option {% if item['parkID'] == data[0]['parkID'] %} selected {% endif %}value="{{item['parkID']}}">{{item['parkName']}}</option>
                        {% endfor %}
                    </select> <br>
                     
                
                </fieldset>
                <input type="submit" value="Edit" name="edit_restaurants" class="btn btn-primary" style="margin:.5rem;">
                <a href='/restaurants'><input class="btn" type="button" value="cancel"></a>
            </form>

</html>